<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:rabbit="http://www.springframework.org/schema/rabbit"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-4.1.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.1.xsd
		http://www.springframework.org/schema/rabbit http://www.springframework.org/schema/rabbit/spring-rabbit-1.6.xsd">

    <!-- *********************************spring rabbitmq连接配置*********************************** -->
    <!-- spring amqp默认的是jackson 的一个插件,目的将生产者生产的数据转换为json存入消息队列 -->
    <bean id="jsonMessageConverter"
          class="org.springframework.amqp.support.converter.Jackson2JsonMessageConverter"></bean>
	<!-- 连接服务器配置 -->
	<rabbit:connection-factory id="connectionFactory" host="127.0.0.1" port="5672" username="epoint" password="epoint" virtual-host="/" />

	<!-- 当前声明的exchange和queue会在服务器上自动生成 -->
	<rabbit:admin connection-factory="connectionFactory" />

	<!--定义rabbit template用于数据的接收和发送 -->
	<rabbit:template id="amqpTemplate" connection-factory="connectionFactory"
					 exchange="lxhExchange" />


	<rabbit:direct-exchange name="lxhExchange" durable="true" auto-delete="false" id="lxhExchange">
		<rabbit:bindings>
			<rabbit:binding queue="lxh_queue" key="lxh_queue"/>
		</rabbit:bindings>
	</rabbit:direct-exchange>
	<!-- 定义队列 -->
	<!-- queue 队列声明 ， 可以多次配置以创建多个队列 -->
	<rabbit:queue id="lxh_queue" name="lxh_queue" durable="true" auto-delete="false" exclusive="false" />
	<!-- 配置监听器 -->
	<!-- the container will acknowledge the message automatically, unless the
		MessageListener throws an exception -->
	<rabbit:listener-container
			connection-factory="connectionFactory" acknowledge="manual">
		<!-- 办件受理监听 -->
		<rabbit:listener queue-names="lxh_queue" ref="lxh_queueListenter" />
	</rabbit:listener-container>

	<!-- 消费者 -->
	<!-- 配置spring的队列监听接口(创建监听处理对象) -->
	<bean id="lxh_queueListenter" class="com.lxh.test.MqHandle.MqClientHandle" />

</beans>